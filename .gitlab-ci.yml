# This is a sample GitLab CI/CD configuration file for a Maven project

image: openjdk:17-jdk-alpine

stages:
  - build_and_test
  - deploy
  - integration_test

cache:
  paths:
    - .m2/repository
    
before_script:
  - apk update

build:
  stage: build_and_test
  script:
    # Download and install Maven
    - apk add curl
    - curl -fsSL https://archive.apache.org/dist/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz -o /tmp/apache-maven.tar.gz
    - tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/
    - mv /usr/share/apache-maven-3.8.1 /usr/share/maven
    - ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    - mvn --version
    - java --version
    # Skip integration test in build stage
    - mvn install -DskipITs
  artifacts:
    paths:
      - target/

variables:
  REMOTE_SERVER: "ljthey.co.uk"
  REMOTE_USER: "ice"
  JAR_FILE: "target/IceBreakerBackend-1.0.jar"
  SSH_PASSWORD: "$CI_SSH_PASSWORD"
  EXISTING_PORT: 8083

deploy:
  stage: deploy
  script:
    - apk add openssh-client
    - apk add sshpass

    # search if there is existing pid
    - EXISTING_PID=$(sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$REMOTE_USER@$REMOTE_SERVER" "lsof -i :$EXISTING_PORT -t || echo 'not_found'")
    - echo "Checking for existing process on port $EXISTING_PORT"
    - echo "EXISTING_PID $EXISTING_PID"

    # copy jar to server
    - sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$JAR_FILE" "$REMOTE_USER@$REMOTE_SERVER:IceBreaker/leo/"

    # if existing, kill it
    - >
      if [ "$EXISTING_PID" != "not_found" ]; then
        echo "Killing existing process on port $EXISTING_PORT with PID $EXISTING_PID"
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$REMOTE_USER@$REMOTE_SERVER" "kill $EXISTING_PID"
      else
        echo "No existing process found on port $EXISTING_PORT"
      fi

    # launch
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$REMOTE_USER@$REMOTE_SERVER" "nohup java -jar IceBreaker/leo/IceBreakerBackend-1.0.jar &>/dev/null  &"

    - sleep 5

    # Show current pid
    - echo $(sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$REMOTE_USER@$REMOTE_SERVER" "lsof -i :$EXISTING_PORT -t || echo 'not_found'")

integration_test:
  stage: integration_test
  script:
    # Download and install Maven
    - apk add curl
    - curl -fsSL https://archive.apache.org/dist/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz -o /tmp/apache-maven.tar.gz
    - tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/
    - mv /usr/share/apache-maven-3.8.1 /usr/share/maven
    - ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    # Only run integration tests after deployment
    - mvn failsafe:integration-test
